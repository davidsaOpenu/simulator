{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "5ea496c2_9e73ff7c",
        "filename": "eVSSIM/scripts/exofs/run_osd_emulator_and_mount_exofs.sh",
        "patchSetId": 36
      },
      "lineNbr": 40,
      "author": {
        "id": 1007990
      },
      "writtenOn": "2025-07-25T08:08:24Z",
      "side": 1,
      "message": "How does mount work in test_and_log_all_operations.sh with OTGT without formatting? This line writes the superblock object to the NVMe device. Later, in line 45, mount is called and is expected to read the superblock object from OTGT, which was written to the NVMe device. I\u0027m afraid that the traces generated by test_and_log_all_operations.sh for mount, open, read, write, and close might be misleading. I would expect mount to fail. Let\u0027s check what happened during the mount. Adding formatting for OTGT and comparing mount traces will shed some light.",
      "revId": "1cb38a543fc9e7d621e9d876f116494d8f97eca2",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c4faf1d5_13d51e7e",
        "filename": "eVSSIM/scripts/exofs/run_osd_emulator_and_mount_exofs.sh",
        "patchSetId": 36
      },
      "lineNbr": 40,
      "author": {
        "id": 1038814
      },
      "writtenOn": "2025-07-29T07:25:43Z",
      "side": 1,
      "message": "the mkfs.exofs, gets the NVME_DEV and does the following\ninside: open-osd/usr/mkexofs.c it calls mkfs_one ( the struct called struct osd_dev but the path inside is the nvme path)\nmkfs_one does the following using nvme calls\n1. creating partition ( identifier pid) by calling nvme_obj_create\n2. creating superblock ( identifier 0x10000 hard coded) by calling nvme_obj_create\n3. creating root directory by calling nvme_obj_create\n4. writing device table by calling nvme_obj_write\n5. writing superblock by calling nvme_obj_write\n6. writing root directory by calling nvme_obj_write\n7. writing root inode by calling nvme_obj_write\n\nI will create graph for the mkfs.exofs so we will see have this documented as well ( will be uploaded to the ticket",
      "parentUuid": "5ea496c2_9e73ff7c",
      "revId": "1cb38a543fc9e7d621e9d876f116494d8f97eca2",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ]
}