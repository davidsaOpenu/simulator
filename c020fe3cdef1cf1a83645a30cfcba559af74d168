{
  "comments": [
    {
      "key": {
        "uuid": "c6c7e456_2f2f36c6",
        "filename": "eVSSIM/LOG_MGR/logging_backend.c",
        "patchSetId": 5
      },
      "lineNbr": 237,
      "author": {
        "id": 1011209
      },
      "writtenOn": "2019-01-22T15:56:06Z",
      "side": 1,
      "message": "I think that this check can be done at the start of the function once instead of this line and line 254. If a valid buffer is not passed we can\u0027t read anything from the logger so it makes sense to return straight with 0.",
      "revId": "c020fe3cdef1cf1a83645a30cfcba559af74d168",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1ef803ad_2c632c45",
        "filename": "eVSSIM/LOG_MGR/logging_backend.c",
        "patchSetId": 5
      },
      "lineNbr": 237,
      "author": {
        "id": 1014550
      },
      "writtenOn": "2019-01-23T18:52:51Z",
      "side": 1,
      "message": "important thing is to let log-\u003etail increment, so this line cannot be at the start of the function. this way, we can \"read\" the logs without actually copy its all contents",
      "parentUuid": "c6c7e456_2f2f36c6",
      "revId": "c020fe3cdef1cf1a83645a30cfcba559af74d168",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "59e09be0_4ddf6603",
        "filename": "eVSSIM/LOG_MGR/logging_backend.c",
        "patchSetId": 5
      },
      "lineNbr": 237,
      "author": {
        "id": 1011209
      },
      "writtenOn": "2019-01-23T19:16:19Z",
      "side": 1,
      "message": "If you do that then you don\u0027t really read the log and this data will be lost. I think that if the buffer is not valid then you can\u0027t read any thing and as a result logger_read() should return 0 because it was not able to fulfill it\u0027s purpose.",
      "revId": "c020fe3cdef1cf1a83645a30cfcba559af74d168",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "85d3e6a1_c2c356ce",
        "filename": "eVSSIM/LOG_MGR/logging_backend.c",
        "patchSetId": 5
      },
      "lineNbr": 237,
      "author": {
        "id": 1007990
      },
      "writtenOn": "2019-01-24T15:56:47Z",
      "side": 1,
      "message": "Good catch, David.",
      "parentUuid": "59e09be0_4ddf6603",
      "revId": "c020fe3cdef1cf1a83645a30cfcba559af74d168",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f058a7f7_b764a0e9",
        "filename": "eVSSIM/LOG_MGR/logging_backend.c",
        "patchSetId": 5
      },
      "lineNbr": 237,
      "author": {
        "id": 1014550
      },
      "writtenOn": "2019-01-25T06:01:24Z",
      "side": 1,
      "message": "The purpose of this lines is to gives logger the ability of skipping unused buffer,\nin attempt to solve the struct loading issue David Sariel refered here: https://review.gerrithub.io/c/davidsaOpenu/simulator/+/441205/3/eVSSIM/LOG_MGR/logging_rt_analyzer.c#166. Please see how skipping used by the method NEXT_BLOCK_ERASE_LOG_ERASED_PAGES eVSSIM/LOG_MGR/logging_parser.c line 60 https://review.gerrithub.io/c/davidsaOpenu/simulator/+/441205/12/eVSSIM/LOG_MGR/logging_parser.c#60",
      "parentUuid": "85d3e6a1_c2c356ce",
      "revId": "c020fe3cdef1cf1a83645a30cfcba559af74d168",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d0ef483a_ba7cfc64",
        "filename": "eVSSIM/LOG_MGR/logging_backend.c",
        "patchSetId": 5
      },
      "lineNbr": 237,
      "author": {
        "id": 1007990
      },
      "writtenOn": "2019-01-25T08:25:08Z",
      "side": 1,
      "message": "Daniel, could you please clarify why we need to skip \"unused\" buffer and how you define it? Thanks.",
      "parentUuid": "f058a7f7_b764a0e9",
      "revId": "c020fe3cdef1cf1a83645a30cfcba559af74d168",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3ae454af_62e5c7ab",
        "filename": "eVSSIM/LOG_MGR/logging_backend.c",
        "patchSetId": 5
      },
      "lineNbr": 237,
      "author": {
        "id": 1014550
      },
      "writtenOn": "2019-01-25T11:10:14Z",
      "side": 1,
      "message": "The methods defined by #define _LOGS_READER_DEFINITION_APPLIER(structure, name) \non eVSSIM/LOG_MGR/logging_parser.c +52 is used by rt_analyzer loop and returns a loaded log struct. As I understand from your comment those methods should not return structs but specific data from the buffer, based on: \"I guess here one needs to change the way NEXT_BLOCK_ERAZE works to get the only the desired field.\" (https://review.gerrithub.io/c/davidsaOpenu/simulator/+/441205/3/eVSSIM/LOG_MGR/logging_rt_analyzer.c#166), What kind of change should I use here?",
      "parentUuid": "d0ef483a_ba7cfc64",
      "revId": "c020fe3cdef1cf1a83645a30cfcba559af74d168",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dc668b62_37a81782",
        "filename": "eVSSIM/LOG_MGR/logging_backend.c",
        "patchSetId": 5
      },
      "lineNbr": 237,
      "author": {
        "id": 1007990
      },
      "writtenOn": "2019-01-27T15:21:15Z",
      "side": 1,
      "message": "If you are implementing internal commands that say write command enlarged the number of occupied pages by 1 page, there is no need to extract particular field. So it depends on your implementation and seems that there is no need in this change at all.",
      "parentUuid": "3ae454af_62e5c7ab",
      "revId": "c020fe3cdef1cf1a83645a30cfcba559af74d168",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a3d02f30_c81b38f8",
        "filename": "eVSSIM/LOG_MGR/logging_backend.h",
        "patchSetId": 5
      },
      "lineNbr": 136,
      "author": {
        "id": 1007990
      },
      "writtenOn": "2019-01-22T12:57:29Z",
      "side": 1,
      "message": "a) please use same naming conventions as found in this file. \nb) have you refactored all the places where the variables appear? \n\nLOG_MGR/logging_manager.c:101:        double write_wall_time \u003d 0;\nLOG_MGR/logging_manager.c:102:        double read_wall_time \u003d 0;\nLOG_MGR/logging_manager.c:120:                write_wall_time +\u003d current_stats.write_count / current_stats.write_speed;\nLOG_MGR/logging_manager.c:122:                read_wall_time +\u003d current_stats.read_count / current_stats.read_speed;\nLOG_MGR/logging_manager.c:130:        if (write_wall_time \u003d\u003d 0)\nLOG_MGR/logging_manager.c:133:            stats.write_speed \u003d ((double) stats.write_count) / write_wall_time;\nLOG_MGR/logging_manager.c:135:        if (read_wall_time \u003d\u003d 0)\nLOG_MGR/logging_manager.c:138:            stats.read_speed \u003d ((double) stats.read_count) / read_wall_time;\nLOG_MGR/logging_rt_analyzer.c:65:    int write_wall_time \u003d 0;\nLOG_MGR/logging_rt_analyzer.c:66:    int read_wall_time \u003d 0;\nLOG_MGR/logging_rt_analyzer.c:67:    int current_wall_time \u003d 0;\nLOG_MGR/logging_rt_analyzer.c:91:                write_wall_time \u003d 0;\nLOG_MGR/logging_rt_analyzer.c:92:                read_wall_time \u003d 0;\nLOG_MGR/logging_rt_analyzer.c:125:                current_wall_time +\u003d CELL_READ_DELAY;\nLOG_MGR/logging_rt_analyzer.c:126:                read_wall_time +\u003d current_wall_time;\nLOG_MGR/logging_rt_analyzer.c:127:                current_wall_time \u003d 0;\nLOG_MGR/logging_rt_analyzer.c:133:                current_wall_time +\u003d CELL_PROGRAM_DELAY;\nLOG_MGR/logging_rt_analyzer.c:134:                write_wall_time +\u003d current_wall_time;\nLOG_MGR/logging_rt_analyzer.c:135:                current_wall_time \u003d 0;\nLOG_MGR/logging_rt_analyzer.c:147:                current_wall_time +\u003d REG_READ_DELAY;\nLOG_MGR/logging_rt_analyzer.c:151:                current_wall_time +\u003d REG_WRITE_DELAY;\nLOG_MGR/logging_rt_analyzer.c:156:                current_wall_time +\u003d BLOCK_ERASE_DELAY;\nLOG_MGR/logging_rt_analyzer.c:160:                current_wall_time +\u003d CHANNEL_SWITCH_DELAY_R;\nLOG_MGR/logging_rt_analyzer.c:164:                current_wall_time +\u003d CHANNEL_SWITCH_DELAY_W;\nLOG_MGR/logging_rt_analyzer.c:177:        if (read_wall_time \u003d\u003d 0)\nLOG_MGR/logging_rt_analyzer.c:181:                ((double) stats.read_count) / read_wall_time\nLOG_MGR/logging_rt_analyzer.c:184:        if (write_wall_time \u003d\u003d 0)\nLOG_MGR/logging_rt_analyzer.c:188:                ((double) stats.write_count) / write_wall_time\n\n\n\nSeems that you have cretaed your own fork",
      "range": {
        "startLine": 110,
        "startChar": 0,
        "endLine": 136,
        "endChar": 18
      },
      "revId": "c020fe3cdef1cf1a83645a30cfcba559af74d168",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e757bdac_3e8225b3",
        "filename": "eVSSIM/LOG_MGR/logging_backend.h",
        "patchSetId": 5
      },
      "lineNbr": 136,
      "author": {
        "id": 1014550
      },
      "writtenOn": "2019-01-23T18:52:51Z",
      "side": 1,
      "message": "I not sure I am understanding your intent,\n\na) should I move RTLogStatistics to another file.\nb) I didn\u0027t refactor those variable, should I refactor those variable into RTLogStatistics object?",
      "parentUuid": "a3d02f30_c81b38f8",
      "range": {
        "startLine": 110,
        "startChar": 0,
        "endLine": 136,
        "endChar": 18
      },
      "revId": "c020fe3cdef1cf1a83645a30cfcba559af74d168",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e51f1328_94071630",
        "filename": "eVSSIM/LOG_MGR/logging_backend.h",
        "patchSetId": 5
      },
      "lineNbr": 136,
      "author": {
        "id": 1007990
      },
      "writtenOn": "2019-01-24T15:56:47Z",
      "side": 1,
      "message": "a) no. Just take a look on the naming convention used for other struct here (RT_Log_Statistics)\n\nb) that\u0027s what I saw. This scruct created a duplication and confusion. Old variables are apart from new ones. So the answer to the refactoring question is affirmative.",
      "parentUuid": "e757bdac_3e8225b3",
      "range": {
        "startLine": 110,
        "startChar": 0,
        "endLine": 136,
        "endChar": 18
      },
      "revId": "c020fe3cdef1cf1a83645a30cfcba559af74d168",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "284f5416_61d2f46e",
        "filename": "eVSSIM/LOG_MGR/logging_backend.h",
        "patchSetId": 5
      },
      "lineNbr": 136,
      "author": {
        "id": 1014550
      },
      "writtenOn": "2019-01-26T08:29:35Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e51f1328_94071630",
      "range": {
        "startLine": 110,
        "startChar": 0,
        "endLine": 136,
        "endChar": 18
      },
      "revId": "c020fe3cdef1cf1a83645a30cfcba559af74d168",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d227078e_251b0e16",
        "filename": "eVSSIM/LOG_MGR/logging_rt_analyzer.c",
        "patchSetId": 5
      },
      "lineNbr": 43,
      "author": {
        "id": 1007990
      },
      "writtenOn": "2019-01-22T12:57:29Z",
      "side": 1,
      "message": "see comment on line 75",
      "revId": "c020fe3cdef1cf1a83645a30cfcba559af74d168",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b66d04e6_2234768d",
        "filename": "eVSSIM/LOG_MGR/logging_rt_analyzer.c",
        "patchSetId": 5
      },
      "lineNbr": 43,
      "author": {
        "id": 1014550
      },
      "writtenOn": "2019-01-23T18:52:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d227078e_251b0e16",
      "revId": "c020fe3cdef1cf1a83645a30cfcba559af74d168",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e26376a_493f2f89",
        "filename": "eVSSIM/LOG_MGR/logging_rt_analyzer.c",
        "patchSetId": 5
      },
      "lineNbr": 75,
      "author": {
        "id": 1007990
      },
      "writtenOn": "2019-01-22T12:57:29Z",
      "side": 1,
      "message": "once again this is not the way that rt loop should work (not real time). See my pervous comments on this review and read again the crarifications you asked on whatsup. You need to add additional  (internal, i.e non ssd command induced) log entry that accounts for the written pages for block X on die number Y.",
      "range": {
        "startLine": 73,
        "startChar": 0,
        "endLine": 75,
        "endChar": 75
      },
      "revId": "c020fe3cdef1cf1a83645a30cfcba559af74d168",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c481bcd0_5a061762",
        "filename": "eVSSIM/LOG_MGR/logging_rt_analyzer.c",
        "patchSetId": 5
      },
      "lineNbr": 75,
      "author": {
        "id": 1014550
      },
      "writtenOn": "2019-01-23T18:52:51Z",
      "side": 1,
      "message": "Fixed",
      "parentUuid": "0e26376a_493f2f89",
      "range": {
        "startLine": 73,
        "startChar": 0,
        "endLine": 75,
        "endChar": 75
      },
      "revId": "c020fe3cdef1cf1a83645a30cfcba559af74d168",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4f252968_c73a70a1",
        "filename": "eVSSIM/SSD_MODULE/ssd_io_manager.c",
        "patchSetId": 5
      },
      "lineNbr": 177,
      "author": {
        "id": 1007990
      },
      "writtenOn": "2019-01-22T12:57:29Z",
      "side": 1,
      "message": "nit: indentation",
      "range": {
        "startLine": 101,
        "startChar": 0,
        "endLine": 177,
        "endChar": 0
      },
      "revId": "c020fe3cdef1cf1a83645a30cfcba559af74d168",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d3688f19_7cf32d13",
        "filename": "eVSSIM/SSD_MODULE/ssd_io_manager.c",
        "patchSetId": 5
      },
      "lineNbr": 177,
      "author": {
        "id": 1014550
      },
      "writtenOn": "2019-01-23T18:52:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4f252968_c73a70a1",
      "range": {
        "startLine": 101,
        "startChar": 0,
        "endLine": 177,
        "endChar": 0
      },
      "revId": "c020fe3cdef1cf1a83645a30cfcba559af74d168",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "38748ad0_58be42a7",
        "filename": "eVSSIM/tests/host/rt_analyzer_subscriber.cc",
        "patchSetId": 5
      },
      "lineNbr": 215,
      "author": {
        "id": 1007990
      },
      "writtenOn": "2019-01-22T12:57:29Z",
      "side": 1,
      "message": "die or flash?",
      "revId": "c020fe3cdef1cf1a83645a30cfcba559af74d168",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cee10038_276a64e3",
        "filename": "eVSSIM/tests/host/rt_analyzer_subscriber.cc",
        "patchSetId": 5
      },
      "lineNbr": 215,
      "author": {
        "id": 1014550
      },
      "writtenOn": "2019-01-23T18:52:51Z",
      "side": 1,
      "message": "die was here at first, didn\u0027t add it, just change the value",
      "parentUuid": "38748ad0_58be42a7",
      "revId": "c020fe3cdef1cf1a83645a30cfcba559af74d168",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7bd463ac_6ed13328",
        "filename": "eVSSIM/tests/host/rt_analyzer_subscriber.cc",
        "patchSetId": 5
      },
      "lineNbr": 215,
      "author": {
        "id": 1007990
      },
      "writtenOn": "2019-01-24T15:56:47Z",
      "side": 1,
      "message": "Don\u0027t you think it will be better to use consistent naming replacing die with flash?",
      "parentUuid": "cee10038_276a64e3",
      "revId": "c020fe3cdef1cf1a83645a30cfcba559af74d168",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "06e80354_7bd8d9ac",
        "filename": "eVSSIM/tests/host/rt_analyzer_subscriber.cc",
        "patchSetId": 5
      },
      "lineNbr": 215,
      "author": {
        "id": 1014550
      },
      "writtenOn": "2019-01-26T08:29:35Z",
      "side": 1,
      "message": "Fixed",
      "parentUuid": "7bd463ac_6ed13328",
      "revId": "c020fe3cdef1cf1a83645a30cfcba559af74d168",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a2b737d0_63ef910d",
        "filename": "eVSSIM/tests/host/ssd_io_emulator_tests.cc",
        "patchSetId": 5
      },
      "lineNbr": 75,
      "author": {
        "id": 1007990
      },
      "writtenOn": "2019-01-22T12:35:52Z",
      "side": 1,
      "message": "mixing 2 different things. introducing delay (ONITOR_SYNC_DELAY) is different from statistics update",
      "range": {
        "startLine": 63,
        "startChar": 0,
        "endLine": 75,
        "endChar": 5
      },
      "revId": "c020fe3cdef1cf1a83645a30cfcba559af74d168",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7f0db87_c6ee0eee",
        "filename": "eVSSIM/tests/host/ssd_io_emulator_tests.cc",
        "patchSetId": 5
      },
      "lineNbr": 75,
      "author": {
        "id": 1014550
      },
      "writtenOn": "2019-01-23T18:52:51Z",
      "side": 1,
      "message": "Fixed",
      "parentUuid": "a2b737d0_63ef910d",
      "range": {
        "startLine": 63,
        "startChar": 0,
        "endLine": 75,
        "endChar": 5
      },
      "revId": "c020fe3cdef1cf1a83645a30cfcba559af74d168",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ed93d3c6_6549f9bf",
        "filename": "eVSSIM/tests/host/ssd_io_emulator_tests.cc",
        "patchSetId": 5
      },
      "lineNbr": 299,
      "author": {
        "id": 1007990
      },
      "writtenOn": "2019-01-22T12:35:52Z",
      "side": 1,
      "message": "must be a function of PAGE_NB (what if one changes the PAGE_NB to be 2 pages)?",
      "range": {
        "startLine": 297,
        "startChar": 0,
        "endLine": 299,
        "endChar": 36
      },
      "revId": "c020fe3cdef1cf1a83645a30cfcba559af74d168",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "79537605_7d1b5cc8",
        "filename": "eVSSIM/tests/host/ssd_io_emulator_tests.cc",
        "patchSetId": 5
      },
      "lineNbr": 299,
      "author": {
        "id": 1014550
      },
      "writtenOn": "2019-01-23T18:52:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ed93d3c6_6549f9bf",
      "range": {
        "startLine": 297,
        "startChar": 0,
        "endLine": 299,
        "endChar": 36
      },
      "revId": "c020fe3cdef1cf1a83645a30cfcba559af74d168",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2e048890_3b174ffa",
        "filename": "eVSSIM/tests/host/ssd_io_emulator_tests.cc",
        "patchSetId": 5
      },
      "lineNbr": 312,
      "author": {
        "id": 1007990
      },
      "writtenOn": "2019-01-22T12:35:52Z",
      "side": 1,
      "message": "also \nplease use here something like",
      "range": {
        "startLine": 312,
        "startChar": 27,
        "endLine": 312,
        "endChar": 39
      },
      "revId": "c020fe3cdef1cf1a83645a30cfcba559af74d168",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "431a3dc9_d5dfe12e",
        "filename": "eVSSIM/tests/host/ssd_io_emulator_tests.cc",
        "patchSetId": 5
      },
      "lineNbr": 312,
      "author": {
        "id": 1014550
      },
      "writtenOn": "2019-01-23T18:52:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2e048890_3b174ffa",
      "range": {
        "startLine": 312,
        "startChar": 27,
        "endLine": 312,
        "endChar": 39
      },
      "revId": "c020fe3cdef1cf1a83645a30cfcba559af74d168",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4d36a267_491d941e",
        "filename": "eVSSIM/tests/host/ssd_io_emulator_tests.cc",
        "patchSetId": 5
      },
      "lineNbr": 335,
      "author": {
        "id": 1007990
      },
      "writtenOn": "2019-01-22T12:35:52Z",
      "side": 1,
      "message": "please implement more tests (as asked in my previous comment).\nYou are proposing relatively big change and it has to be covered by complex tests rather them by simplistic page writes. Fill in more (to the SSD) to see that calculations are ok.",
      "revId": "c020fe3cdef1cf1a83645a30cfcba559af74d168",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3b5c58b7_384329b1",
        "filename": "eVSSIM/tests/host/ssd_io_emulator_tests.cc",
        "patchSetId": 5
      },
      "lineNbr": 335,
      "author": {
        "id": 1014550
      },
      "writtenOn": "2019-01-23T18:52:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4d36a267_491d941e",
      "revId": "c020fe3cdef1cf1a83645a30cfcba559af74d168",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}